"""add firewall policy and rule tables

Revision ID: 31c950d95a37
Revises: 933c911a32ce
Create Date: 2025-06-14 19:15:38.436808

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '31c950d95a37'
down_revision: Union[str, None] = '933c911a32ce'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('firewall_policies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('default_action', sa.Enum('accept', 'drop', 'reject', name='firewallaction'), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_firewall_policies_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_firewall_policies')),
    sa.UniqueConstraint('name', name=op.f('uq_firewall_policies_name'))
    )
    op.create_table('firewall_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('policy_id', sa.Integer(), nullable=False),
    sa.Column('rule_number', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('action', sa.Enum('accept', 'drop', 'reject', name='firewallaction'), nullable=False),
    sa.Column('protocol', sa.Enum('tcp', 'udp', 'icmp', 'gre', 'esp', 'ah', 'all', name='firewallruleprotocol'), nullable=True),
    sa.Column('source_address', sa.String(), nullable=True),
    sa.Column('source_port', sa.String(), nullable=True),
    sa.Column('destination_address', sa.String(), nullable=True),
    sa.Column('destination_port', sa.String(), nullable=True),
    sa.Column('log', sa.Integer(), nullable=True),
    sa.Column('state_established', sa.Integer(), nullable=True),
    sa.Column('state_related', sa.Integer(), nullable=True),
    sa.Column('state_new', sa.Integer(), nullable=True),
    sa.Column('state_invalid', sa.Integer(), nullable=True),
    sa.Column('is_enabled', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['policy_id'], ['firewall_policies.id'], name=op.f('fk_firewall_rules_policy_id_firewall_policies')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_firewall_rules')),
    sa.UniqueConstraint('policy_id', 'rule_number', name=op.f('uq_firewall_rules_policy_id_rule_number'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('firewall_rules')
    op.drop_table('firewall_policies')
    # ### end Alembic commands ###
